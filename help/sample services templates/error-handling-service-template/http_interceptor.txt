import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { retry, catchError } from 'rxjs/operators';
import { Injectable } from '@angular/core';
import { <<serviceClassName>> } from './<<file serviceName>>.service';

@Injectable({
 providedIn: 'root' 
})
export class HttpErrorInterceptor implements HttpInterceptor {
  constructor(private errorHandler: <<serviceClassName>>){ }
  
  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
    return <any>next.handle(request)
      .pipe(
        retry(1),
        catchError((error: HttpErrorResponse) => {
          let errorMessage = '<<const string errorMessage>>';
          
        this.errorHandler.handleError(error);
          return throwError(errorMessage);
        })
      );
  }
}